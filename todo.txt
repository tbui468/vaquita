TODO:
    When splitting root into nodes 20 and 21, node 20 should remain full

    Need access to IndexList when splitting internals (since we need access to all parent nodes)
        Algorithm:
            If node is full
                if node is root, root now becomes new left, add new right, and add new root
                else, add new child (new right node) to parent
                    if parent is full, run same algorithm

    Deleting records
        Should keys be reused?  How does sqlite do it?

    Switch to binary search in _tree_traverse_to_leaf (just using linear scan right now)

    Limit how many blocks are in buffer cache at a time - use least-recently used eviction policy

    Refactor code to make it more readable - splitting leaves is a mess now

    Allow fetch to get range of records by primary key - first step into creating an execution engine here

    How to implement execution engine:
        SQL parser and VM to run the bytecode

