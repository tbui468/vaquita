TODO:
    Use gdb to walk through code (Cherno recommended debugger to learn to read code)
        https://www.cs.yale.edu/homes/aspnes/pinewiki/C(2f)Debugging.html
        Try it on the xv6 (or the risc-v version) - would gdb even work with vm?

    Allocating and getting a new page requires rewrite since struct VdbPage is no longer the same
        Do we really need two separate functions for allocating a fresh page and getting that page using the index?

        Pager returns a buffer to tree module.  It's up to tree to deserialize based on type of node

        VdbNode* _tree_get_node(pager, idx) {
            page = pager_get_page(pager, idx);

            switch (get type from page->buf) {
                case VDBN_META:
                    node = _tree_deserialize_meta(buf);
            }
        }

    Deletin records
        Should keys be reused?  How does sqlite do it? - sqlite allows reuse if user desires

    Switch to binary search in _tree_traverse_to_leaf (just using linear scan right now)

    Limit how many blocks are in buffer cache at a time - use least-recently used eviction policy

    Refactor code to make it more readable - splitting leaves is a mess now

    Allow fetch to get range of records by primary key - first step into creating an execution engine here

    How to implement execution engine:
        SQL parser and VM to run the bytecode

