    Efficiency of dbms can be estimated with number IO operations

    Use gdb to walk through code (Cherno recommended debugger to learn to read code)
        https://www.cs.yale.edu/homes/aspnes/pinewiki/C(2f)Debugging.html
        Try it on the xv6 (or the risc-v version) - would gdb even work with vm?

    https://github.com/firstcontributions/first-contributionsool
        go to this link and do a basic contribution

    Use ChatGPT to help write paper on neural network to learn
        eviction policy for pager - integration of neural networks
        into legacy code

    Use Yahoo or some other database standard metric to focus on core features

    cstack.github.io for short guide to basics of SQL implementation (not complete)

    Read Edward Sciore's book on implementing a relational database

    Use SDL and Vulkan to visualize SQL + b-tree (2d first, and then 3d)

*******************************Storage Engine*******************************************
    replace all read/writing parent nodes with a single general function

    Check that internal splitting works

    Cursor abstraction - would this be helpful as the intermediary between vdb.c and tree.c?

    Need index cells in data blocks (which we don't have now) since it will be required when data blocks
        need to be defragmented (unless there's a way to defrag without index cells...)
        Change 'free' field in data blocks into datacells size like in leaf/intern nodes. (since is easy to compute from end of the page)

    update records

    delete records

    pager eviction policy
        make db really big so that the program crashes because of too much memory allocated, then evict pages to fix it

    Custom keys
        Unique or not?
        Have to rewrite tree to split/merge based on where inserted (since it will not be in order anymore)

    Concurrency - need to get read/write locks on file

    Transactions - need a way of rolling back changes if transaction fails

    Logging - database should never be in inconsistent state if system fails

************************Execution Engine**********************

    Execution engine
        selection WHERE
        projection SELECT 

        See SQL-92 for the standard to quality as 'supporting SQL'

        Foreign keys

